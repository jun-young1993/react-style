"use strict";(self.webpackChunkjuny_react_style=self.webpackChunkjuny_react_style||[]).push([[62],{"./src/component/DarkAndLightModeButton/DarkAndLightModeButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DarkAndLightModeButtonTemplate:()=>DarkAndLightModeButtonTemplate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DarkAndLightModeButton_stories});var _templateObject,_templateObject2,taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),mjs=__webpack_require__("./node_modules/react-symbol/dist/mjs/index.js"),LightTheme=__webpack_require__("./src/component/StyleThemeProvider/LightTheme.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const rotate=(0,styled_components_browser_esm.i7)(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"]))),Button=styled_components_browser_esm.Ay.button(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.A)(["\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.5s ease;\n  outline: none;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &.rotate {\n    animation: "," 0.5s forwards;\n  }\n"])),rotate),DarkAndLightModeButton=_ref=>{let{iconSize,onClick,initMode,moonColor,sunColor}=_ref;const[isDarkMode,setIsDarkMode]=(0,react.useState)(initMode||!1),[isRotating,setIsRotating]=(0,react.useState)(!1),size=iconSize?iconSize.toString():"30";return(0,jsx_runtime.jsx)(Button,{onClick:()=>{setIsRotating(!0),setTimeout((()=>{setIsDarkMode(!isDarkMode),setIsRotating(!1),onClick&&onClick(isDarkMode?"dark":"light")}),250)},className:isRotating?"rotate":"",children:isDarkMode?(0,jsx_runtime.jsx)(mjs.rR,{width:size,height:size,viewBox:"0 0 14 14",color:null!=moonColor?moonColor:LightTheme.A.black}):(0,jsx_runtime.jsx)(mjs.gL,{width:size,height:size,viewBox:"0 0 14 14",color:null!=sunColor?sunColor:LightTheme.A.white})})},DarkAndLightModeButton_DarkAndLightModeButton=DarkAndLightModeButton;DarkAndLightModeButton.__docgenInfo={description:"",methods:[],displayName:"DarkAndLightModeButton",props:{iconSize:{required:!1,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(mode: string | 'dark' | 'light') => void",signature:{arguments:[{type:{name:"union",raw:"string | 'dark' | 'light'",elements:[{name:"string"},{name:"literal",value:"'dark'"},{name:"literal",value:"'light'"}]},name:"mode"}],return:{name:"void"}}},description:""},initMode:{required:!1,tsType:{name:"boolean"},description:""},moonColor:{required:!1,tsType:{name:"string"},description:""},sunColor:{required:!1,tsType:{name:"string"},description:""}}};const DarkAndLightModeButton_stories={title:"DarkAndLightModeButton",Component:DarkAndLightModeButton_DarkAndLightModeButton},DarkAndLightModeButtonTemplate=(args=>(0,jsx_runtime.jsx)(DarkAndLightModeButton_DarkAndLightModeButton,{...args})).bind({});DarkAndLightModeButtonTemplate.args={iconSize:"14"},DarkAndLightModeButtonTemplate.parameters={...DarkAndLightModeButtonTemplate.parameters,docs:{...DarkAndLightModeButtonTemplate.parameters?.docs,source:{originalSource:"args => <DarkAndLightModeButton {...args} />",...DarkAndLightModeButtonTemplate.parameters?.docs?.source}}};const __namedExportsOrder=["DarkAndLightModeButtonTemplate"]}}]);